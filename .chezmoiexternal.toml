{{/* Common architecture mappings */}}
{{ $archLinuxGnu := .chezmoi.arch }}
{{ if eq $archLinuxGnu "arm64" }}{{ $archLinuxGnu = "aarch64" }}{{ end }}
{{ if eq $archLinuxGnu "amd64" }}{{ $archLinuxGnu = "x86_64" }}{{ end }}

{{ $archNative := .chezmoi.arch }}

{{ $archX64 := .chezmoi.arch }}
{{ if eq $archX64 "amd64" }}{{ $archX64 = "x64" }}{{ end }}

{{/* OS mappings */}}
{{ $osNative := .chezmoi.os }}

{{/* Neovim specific mappings */}}
{{ $osName := .chezmoi.os }}
{{ if eq $osName "darwin" }}{{ $osName = "macos" }}{{ end }}
{{ $archNeovim := .chezmoi.arch }}
{{ if eq $archNeovim "amd64" }}{{ $archNeovim = "x86_64" }}{{ end }}

[".local/opt/nvim"]
    type            = "archive"
    url             = "https://github.com/neovim/neovim/releases/download/v{{ template "get-github-latest-version" list "neovim/neovim" }}/nvim-{{ $osName }}-{{ $archNeovim }}.tar.gz"
    stripComponents = 1
    refreshPeriod   = "168h"

[".local/bin/jnv"]
    type = "archive-file"
    url = "https://github.com/ynqa/jnv/releases/download/v{{ template "get-github-latest-version" list "ynqa/jnv" }}/jnv-{{ $archLinuxGnu }}-unknown-linux-gnu.tar.xz"
    path = "jnv-{{ $archLinuxGnu }}-unknown-linux-gnu/jnv"
    executable = true
    refreshPeriod = "168h"

[".local/bin/zoxide"]
    type = "archive-file"
    url = "https://github.com/ajeetdsouza/zoxide/releases/download/v{{ template "get-github-latest-version" list "ajeetdsouza/zoxide" }}/zoxide-{{ template "get-github-latest-version" list "ajeetdsouza/zoxide" }}-{{ $archLinuxGnu }}-unknown-linux-musl.tar.gz"
    path = "zoxide"
    executable = true
    refreshPeriod = "168h"

[".local/bin/delta"]
    type = "archive-file"
    url = "https://github.com/dandavison/delta/releases/download/{{ template "get-github-latest-version" list "dandavison/delta" }}/delta-{{ template "get-github-latest-version" list "dandavison/delta" }}-{{ $archLinuxGnu }}-unknown-linux-gnu.tar.gz"
    path = "delta-{{ template "get-github-latest-version" list "dandavison/delta" }}-{{ $archLinuxGnu }}-unknown-linux-gnu/delta"
    executable = true
    refreshPeriod = "168h"

[".local/bin/ghq"]
    type = "archive-file"
    url = "https://github.com/x-motemen/ghq/releases/download/v{{ template "get-github-latest-version" list "x-motemen/ghq" }}/ghq_{{ $osNative }}_{{ $archNative }}.zip"
    path = "ghq_{{ $osNative }}_{{ $archNative }}/ghq"
    executable = true
    refreshPeriod = "168h"

[".local/completions/_ghq"]
    type = "archive-file"
    url = "https://github.com/x-motemen/ghq/releases/download/v{{ template "get-github-latest-version" list "x-motemen/ghq" }}/ghq_{{ $osNative }}_{{ $archNative }}.zip"
    path = "ghq_{{ $osNative }}_{{ $archNative }}/misc/zsh/_ghq"
    executable = true
    refreshPeriod = "168h"

[".local/bin/kubectl-krew"]
    type = "archive-file"
    url = "https://github.com/kubernetes-sigs/krew/releases/download/v{{ template "get-github-latest-version" list "kubernetes-sigs/krew" }}/krew-{{ $osNative }}_{{ $archNative }}.tar.gz"
    path = "./krew-{{ $osNative }}_{{ $archNative }}"
    executable = true
    refreshPeriod = "168h"

[".local/bin/fzf"]
    type = "archive-file"
    url = "https://github.com/junegunn/fzf/releases/download/v{{ template "get-github-latest-version" list "junegunn/fzf" }}/fzf-{{ template "get-github-latest-version" list "junegunn/fzf" }}-{{ $osNative }}_{{ $archNative }}.tar.gz"
    executable = true
    path = "fzf"
    refreshPeriod = "168h"

[".local/bin/jq"]
    type = "file"
    url = "https://github.com/jqlang/jq/releases/download/{{ template "get-github-latest-version" list "jqlang/jq" }}/jq-linux-{{ $archNative }}"
    executable = true
    refreshPeriod = "168h"

[".local/bin/argocd"]
    type = "file"
    url = "https://github.com/argoproj/argo-cd/releases/download/v{{ template "get-github-latest-version" list "argoproj/argo-cd" }}/argocd-linux-{{ $archNative }}"
    executable = true
    refreshPeriod = "168h"

[".local/bin/helm"]
    type = "archive-file"
    url = "https://get.helm.sh/helm-v{{ template "get-github-latest-version" list "helm/helm" }}-linux-{{ $archNative }}.tar.gz"
    path = "linux-{{ $archNative }}/helm"
    executable = true
    refreshPeriod = "168h"

[".local/bin/gron"]
    type = "archive-file"
    url = "https://github.com/tomnomnom/gron/releases/download/v{{ template "get-github-latest-version" list "tomnomnom/gron" }}/gron-linux-{{ $archNative }}-{{ template "get-github-latest-version" list "tomnomnom/gron" }}.tgz"
    path = "gron"
    executable = true
    refreshPeriod = "168h"

[".local/bin/kubectl"]
    type = "file"
    url = "https://dl.k8s.io/release/v{{ template "get-github-latest-version" list "kubernetes/kubernetes" }}/bin/linux/{{ $archNative }}/kubectl"
    executable = true
    refreshPeriod = "168h"

[".local/bin/terraform"]
    type = "archive-file"
    url = "https://releases.hashicorp.com/terraform/{{ template "get-github-latest-version" list "hashicorp/terraform" }}/terraform_{{ template "get-github-latest-version" list "hashicorp/terraform" }}_linux_{{ $archNative }}.zip"
    path = "terraform"
    executable = true
    refreshPeriod = "168h"

[".oh-my-zsh/custom/plugins/zsh-autosuggestions"]
    type = "archive"
    url = "https://github.com/zsh-users/zsh-autosuggestions/archive/master.tar.gz"
    exact = true
    stripComponents = 1
    refreshPeriod = "168h"

[".oh-my-zsh"]
    type = "archive"
    url = "https://github.com/ohmyzsh/ohmyzsh/archive/master.tar.gz"
    exact = true
    stripComponents = 1
    refreshPeriod = "168h"

[".oh-my-zsh/custom/plugins/zsh-syntax-highlighting"]
    type = "archive"
    url = "https://github.com/zsh-users/zsh-syntax-highlighting/archive/master.tar.gz"
    exact = true
    stripComponents = 1
    refreshPeriod = "168h"

[".oh-my-zsh/custom/themes/powerlevel10k"]
    type = "archive"
    url = "https://github.com/romkatv/powerlevel10k/archive/master.tar.gz"
    exact = true
    stripComponents = 1

[".config/tmux/tmux.conf"]
    type = "file"
    url = "https://raw.githubusercontent.com/gpakosz/.tmux/refs/heads/master/.tmux.conf"
    exact = true
    stripComponents = 1
    refreshPeriod = "168h"

[".tmux/plugins/tmux-continuum/continuum.tmux"]
    type = "file"
    url = "https://raw.githubusercontent.com/tmux-plugins/tmux-continuum/master/continuum.tmux"
    exact = true
    stripComponents = 1
    refreshPeriod = "168h"

[".tmux/plugins/tmux-resurrect"]
    type = "archive"
    url = "https://github.com/tmux-plugins/tmux-resurrect/archive/master.tar.gz"
    exact = true
    stripComponents = 1
    refreshPeriod = "168h"

[".config/nvim"]
    type = "archive"
    url = "https://github.com/llajas/kickstart.nvim/archive/master.tar.gz"
    exact = true
    stripComponents = 1
    refreshPeriod = "168h"

[".config/nvim/lua/custom/plugins/lualine.lua"]
    type = "file"
    url = "https://raw.githubusercontent.com/xero/dotfiles/refs/heads/main/neovim/.config/nvim/lua/plugins/lualine.lua"
    exact = true
    stripComponents = 1
    refreshPeriod = "168h"

[".config/nvim/pack/github/start/copilot.vim"]
    type = "archive"
    url = "https://github.com/github/copilot.vim/archive/master.tar.gz"
    exact = true
    stripComponents = 1
    refreshPeriod = "168h"

[".local/bin/node"]
    type = "archive-file"
    url  = "https://nodejs.org/dist/{{ template "get-node-latest-lts-version" . }}/node-{{ template "get-node-latest-lts-version" . }}-{{ $osNative }}-{{ $archX64 }}.tar.xz"
    path = "node-{{ template "get-node-latest-lts-version" . }}-{{ $osNative }}-{{ $archX64 }}/bin/node"
    executable    = true
    refreshPeriod = "168h"

[".local/bin/op"]
    type = "archive-file"
    url = "https://cache.agilebits.com/dist/1P/op2/pkg/v{{ template "get-1password-latest-version" . }}/op_linux_{{ $archNative }}_v{{ template "get-1password-latest-version" . }}.zip"
    path = "op"
    executable = true
    refreshPeriod = "168h"

[".local/bin/gh"]
    type = "archive-file"
    url = "https://github.com/cli/cli/releases/download/v{{ template "get-github-latest-version" list "cli/cli" }}/gh_{{ template "get-github-latest-version" list "cli/cli" }}_{{ if eq .chezmoi.os "darwin" }}macOS_{{ else }}linux_{{ end }}{{ $archNative }}{{ if eq .chezmoi.os "darwin" }}.zip{{ else }}.tar.gz{{ end }}"
    path = "gh_{{ template "get-github-latest-version" list "cli/cli" }}_{{ if eq .chezmoi.os "darwin" }}macOS_{{ else }}linux_{{ end }}{{ $archNative }}/bin/gh"
    executable = true
    refreshPeriod = "168h"

[".local/bin/neowofetch"]
    type          = "file"
    url           = "https://nf.hydev.org"
    executable    = true
    refreshPeriod = "168h"
    
[".local/bin/onefetch"]
    type = "archive-file"
    url = "https://github.com/o2sh/onefetch/releases/download/{{ template "get-github-latest-version" list "o2sh/onefetch" }}/onefetch-{{ if eq .chezmoi.os "darwin" }}mac{{ else }}linux{{ end }}.tar.gz"
    path = "onefetch"
    executable    = true
    stripComponents = 1
    refreshPeriod = "168h"

[".local/share/fonts/FiraCodeNerdFont-Regular.ttf"]
    type = "archive-file"
    url = "https://github.com/ryanoasis/nerd-fonts/releases/download/v3.2.1/FiraCode.zip"
    path = "FiraCodeNerdFont-Regular.ttf"
    refreshPeriod = "168h"

[".local/share/fonts/FiraCodeNerdFontMono-Regular.ttf"]
    type = "archive-file"
    url = "https://github.com/ryanoasis/nerd-fonts/releases/download/v3.2.1/FiraCode.zip"
    path = "FiraCodeNerdFontMono-Regular.ttf"
    refreshPeriod = "168h"

[".local/share/fonts/MesloLGSNerdFont-Regular.ttf"]
    type = "archive-file"
    url = "https://github.com/ryanoasis/nerd-fonts/releases/download/v3.4.0/Meslo.zip"
    path = "MesloLGSNerdFont-Regular.ttf"
    refreshPeriod = "168h"